# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import hold_pb2 as hold__pb2


class HoldStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.DecodeBolt11 = channel.unary_unary(
                '/cln.Hold/DecodeBolt11',
                request_serializer=hold__pb2.DecodeBolt11Request.SerializeToString,
                response_deserializer=hold__pb2.DecodeBolt11Response.FromString,
                )
        self.HoldInvoice = channel.unary_unary(
                '/cln.Hold/HoldInvoice',
                request_serializer=hold__pb2.HoldInvoiceRequest.SerializeToString,
                response_deserializer=hold__pb2.HoldInvoiceResponse.FromString,
                )
        self.HoldInvoiceSettle = channel.unary_unary(
                '/cln.Hold/HoldInvoiceSettle',
                request_serializer=hold__pb2.HoldInvoiceSettleRequest.SerializeToString,
                response_deserializer=hold__pb2.HoldInvoiceSettleResponse.FromString,
                )
        self.HoldInvoiceCancel = channel.unary_unary(
                '/cln.Hold/HoldInvoiceCancel',
                request_serializer=hold__pb2.HoldInvoiceCancelRequest.SerializeToString,
                response_deserializer=hold__pb2.HoldInvoiceCancelResponse.FromString,
                )
        self.HoldInvoiceLookup = channel.unary_unary(
                '/cln.Hold/HoldInvoiceLookup',
                request_serializer=hold__pb2.HoldInvoiceLookupRequest.SerializeToString,
                response_deserializer=hold__pb2.HoldInvoiceLookupResponse.FromString,
                )


class HoldServicer(object):
    """Missing associated documentation comment in .proto file."""

    def DecodeBolt11(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HoldInvoice(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HoldInvoiceSettle(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HoldInvoiceCancel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HoldInvoiceLookup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_HoldServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'DecodeBolt11': grpc.unary_unary_rpc_method_handler(
                    servicer.DecodeBolt11,
                    request_deserializer=hold__pb2.DecodeBolt11Request.FromString,
                    response_serializer=hold__pb2.DecodeBolt11Response.SerializeToString,
            ),
            'HoldInvoice': grpc.unary_unary_rpc_method_handler(
                    servicer.HoldInvoice,
                    request_deserializer=hold__pb2.HoldInvoiceRequest.FromString,
                    response_serializer=hold__pb2.HoldInvoiceResponse.SerializeToString,
            ),
            'HoldInvoiceSettle': grpc.unary_unary_rpc_method_handler(
                    servicer.HoldInvoiceSettle,
                    request_deserializer=hold__pb2.HoldInvoiceSettleRequest.FromString,
                    response_serializer=hold__pb2.HoldInvoiceSettleResponse.SerializeToString,
            ),
            'HoldInvoiceCancel': grpc.unary_unary_rpc_method_handler(
                    servicer.HoldInvoiceCancel,
                    request_deserializer=hold__pb2.HoldInvoiceCancelRequest.FromString,
                    response_serializer=hold__pb2.HoldInvoiceCancelResponse.SerializeToString,
            ),
            'HoldInvoiceLookup': grpc.unary_unary_rpc_method_handler(
                    servicer.HoldInvoiceLookup,
                    request_deserializer=hold__pb2.HoldInvoiceLookupRequest.FromString,
                    response_serializer=hold__pb2.HoldInvoiceLookupResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cln.Hold', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Hold(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def DecodeBolt11(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cln.Hold/DecodeBolt11',
            hold__pb2.DecodeBolt11Request.SerializeToString,
            hold__pb2.DecodeBolt11Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def HoldInvoice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cln.Hold/HoldInvoice',
            hold__pb2.HoldInvoiceRequest.SerializeToString,
            hold__pb2.HoldInvoiceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def HoldInvoiceSettle(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cln.Hold/HoldInvoiceSettle',
            hold__pb2.HoldInvoiceSettleRequest.SerializeToString,
            hold__pb2.HoldInvoiceSettleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def HoldInvoiceCancel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cln.Hold/HoldInvoiceCancel',
            hold__pb2.HoldInvoiceCancelRequest.SerializeToString,
            hold__pb2.HoldInvoiceCancelResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def HoldInvoiceLookup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cln.Hold/HoldInvoiceLookup',
            hold__pb2.HoldInvoiceLookupRequest.SerializeToString,
            hold__pb2.HoldInvoiceLookupResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
